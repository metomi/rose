#!/usr/bin/env bash
#-------------------------------------------------------------------------------
# (C) British Crown Copyright 2012-3 Met Office.
# 
# This file is part of Rose, a framework for scientific suites.
# 
# Rose is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Rose is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Rose. If not, see <http://www.gnu.org/licenses/>.
#     Refer to COPYRIGHT.txt of this distribution for details.
#-------------------------------------------------------------------------------
# NAME
#     rose-mpi-launch
#
# SYNOPSIS
#     rose mpi-launch [OPTIONS] [--] COMMAND [ARGUMENTS ...]
#
# DESCRIPTION
#     Provide a portable way to launch an MPI command.
#
# ARGUMENTS
#     COMMAND
#         Command to call. Subsequent arguments are passed to the command.
#
# OPTIONS
#     --debug
#         Switch on xtrace, i.e. "set -x".
#     --quiet, -q
#         Decrement verbosity.
#     --verbose, -v
#         Increment verbosity. Print command on "-v" mode. Run "printenv", "ldd"
#         on a binary executable, and "ulimit -a" on "-v -v" mode.
#
# CONFIGURATION
#     The command reads from the <var>[rose-mpi-launch]</var> section in
#     "$ROSE_HOME/etc/rose.conf" and "$HOME/.metomi/rose.conf". All settings
#     are optional. Valid settings are:
#
#     launcher-list=LIST
#         Specify a list of launcher commands.
#     launcher-preopts.LAUNCHER=OPTIONS
#         Specify the default options of a LAUNCHER before the COMMAND.
#     launcher-postopts.LAUNCHER=OPTIONS
#         Specify the default options of a LAUNCHER after the COMMAND.
#
# ENVIRONMENT VARIABLES
#     optional ROSE_LAUNCHER
#         Specify the launcher program to run the prog.
#
#     optional ROSE_LAUNCH_INNER
#         Specify an inner wrapper to be run by launcher, can be set to ""
#         to call the executable directly. Default is "$0 --inner".
#
#     optional ROSE_LAUNCHER_LIST
#         Specify an alternative list of launchers. Override launcher-list
#         setting in configuration.
#
#     optional ROSE_LAUNCHER_PREOPTS
#         Specify the options to the launcher program to be inserted before
#         the program name.
#
#     optional ROSE_LAUNCHER_POSTOPTS
#         Specify the options to the launcher program to be inserted after
#         the program name.
#       
#     optional ROSE_LAUNCHER_ULIMIT_OPTS
#         Specify the arguments to ulimit. Setting this variable to "-a -s
#         unlimited -d unlimited -a" results in "ulimit -a; ulimit -s unlimited;
#         ulimit -d unlimited; ulimit -a"
#
#     optional NPROC
#         Specify the number of processors to run on. Default is 1.
#
# DIAGNOSTICS
#     Return 0 on success, 1 or exit code of COMMAND on failure.
#-------------------------------------------------------------------------------
. $(dirname $0)/../lib/bash/rose_init
rose_init rose_log

# ------------------------------------------------------------------------------
while (($# > 0)); do
    case $1 in
    --debug)
        shift 1
        set -x
        :;;
    --inner)
        shift 1
        if [[ -n ${ROSE_LAUNCHER_ULIMIT_OPTS:-} ]]; then
            while getopts 'HST:ab:c:d:e:f:i:l:m:n:p:q:r:s:t:u:v:x:' \
                OPT $ROSE_LAUNCHER_ULIMIT_OPTS
            do
                case "$OPT" in
                  '?') return 1;;
                    *) ulimit -$OPT $OPTARG || return $?;;
                esac
            done
        fi
        if ((ROSE_VERBOSITY >= 3)); then
            run ulimit -a
        fi
        info 2 exec "$@"
        exec "$@"
        :;;
    -q) shift 1
        ((--ROSE_VERBOSITY))
        :;;
    --quiet)
        shift 1
        ((--ROSE_VERBOSITY))
        :;;
    -v) shift 1
        ((++ROSE_VERBOSITY))
        :;;
    --verbose)
        shift 1
        ((++ROSE_VERBOSITY))
        :;;
    --) shift 1
        break
        :;;
    -*) rose_usage 1
        :;;
    *)  break
        :;;
    esac
done

# ------------------------------------------------------------------------------
if (($# < 1)); then
    rose_usage 1
fi

if ! COMMAND=$(type -P $1); then
    err "$1: COMMAND not found"
fi
shift 1

ROSE_LAUNCHER_LIST=${ROSE_LAUNCHER_LIST:-$( \
    rose config --default= $ROSE_NS launcher-list)}
export NPROC=${NPROC:-1}

#-------------------------------------------------------------------------------
# 0. ROSE_LAUNCHER_MPICH is deprecated. Alternative launchers should be
# specified in build specific run time scripts using ROSE_LAUNCHER
#-------------------------------------------------------------------------------
ROSE_LAUNCHER_LIST="${ROSE_LAUNCHER_MPICH:-} $ROSE_LAUNCHER_LIST"

#-------------------------------------------------------------------------------
# 1. Assign a value to ROSE_LAUNCHER if it is not already set.
#-------------------------------------------------------------------------------
if ! printenv ROSE_LAUNCHER >/dev/null; then
    ROSE_LAUNCHER=
    for LAUNCHER in $ROSE_LAUNCHER_LIST; do
        if type -P $LAUNCHER >/dev/null; then
            ROSE_LAUNCHER=$LAUNCHER
            break
        fi
    done
fi

#-------------------------------------------------------------------------------
# 2. Find the full path of ROSE_LAUNCHER and set up the pre/post options.
#-------------------------------------------------------------------------------
if [[ -n $ROSE_LAUNCHER ]]; then
    # Path
    if ! ROSE_LAUNCHER_PATH=$(type -P $ROSE_LAUNCHER); then
        err "ROSE_LAUNCHER: $ROSE_LAUNCHER: command not found"
    fi
    ROSE_LAUNCHER=$ROSE_LAUNCHER_PATH
    if ! printenv ROSE_LAUNCH_INNER >/dev/null; then
         ROSE_LAUNCH_INNER="${0}$(optv) --inner"
    fi
    # Options
    ROSE_LAUNCHER_BASE=$(basename $ROSE_LAUNCHER)
    ROSE_LAUNCHER_PREOPTS=${ROSE_LAUNCHER_PREOPTS:-$( \
        rose config -E --default= $ROSE_NS launcher-preopts.$ROSE_LAUNCHER_BASE)}
    ROSE_LAUNCHER_POSTOPTS=${ROSE_LAUNCHER_POSTOPTS:-$( \
        rose config -E --default= $ROSE_NS launcher-postopts.$ROSE_LAUNCHER_BASE)}
else
    ROSE_LAUNCH_INNER=
    ROSE_LAUNCHER_PREOPTS=
    ROSE_LAUNCHER_POSTOPTS=
fi

if ((ROSE_VERBOSITY >= 3)); then
    info 3 printenv
    printenv | sort
    run ldd $COMMAND || true 2>/dev/null
fi

#-------------------------------------------------------------------------------
# 3. Launch the program.
#-------------------------------------------------------------------------------
info 2 exec \
$ROSE_LAUNCHER \
$ROSE_LAUNCHER_PREOPTS \
$ROSE_LAUNCH_INNER \
$COMMAND \
$ROSE_LAUNCHER_POSTOPTS \
"$@"
exec \
$ROSE_LAUNCHER \
$ROSE_LAUNCHER_PREOPTS \
$ROSE_LAUNCH_INNER \
$COMMAND \
$ROSE_LAUNCHER_POSTOPTS \
"$@"
