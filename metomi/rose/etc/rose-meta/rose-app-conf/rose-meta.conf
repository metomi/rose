[=file-install-root]
description=Specify the root directory to install file targets that are
           =specified with a relative path.

[=meta]
description=Default id or type of application, used to find the metadata directory
type=meta

[=mode]
description=Specify the name of a builtin application

[=opts]
description=A space-delimited list of optional configuration keys to switch on.
help=A space-delimited list of optional configuration keys to switch on.
    =
    = This tells the run time program to load the relevant optional
    = configurations in the opt/ sub-directory at run time.

[command]
description=Different command options including default.

[command=default]
description=Default command to be run, after environment is loaded
           =and files output.
title=command default

[env]
description=Environment variable configuration

[file]
description=File installation configuration

# Note: the following 'file:*' syntax is unique, and has no wildcard.
# Wildcard operators in metadata sections are not supported.
[file:*=checksum]
description=Checksum for validation
pattern=^[0-9a-f]{32}$|^$

# Note: the following 'file:*' syntax is unique, and has no wildcard.
# Wildcard operators in metadata sections are not supported.
[file:*=mode]
description=Operation to perform
values=auto, mkdir, symlink, symlink+

# Note: the following 'file:*' syntax is unique, and has no wildcard.
# Wildcard operators in metadata sections are not supported.
[file:*=source]
description=External resource URI
sort-key=00
type=file

[poll]
description=Specify prerequisites to poll for before running the actual application.
           =
           = The tests will be performed once when the application runner starts.
           =
           = If poll=delays is added, the tests will be performed a number of times
           = with delays between them.

[poll=all-files]
help=A space delimited list of file paths. Accepts globs.
    =
    = This test passes only if all file paths in the list exist.
    =
    = If a custom test is specified using poll=file-test , it
    = will pass only if the test returns a 0 (zero) return code
    = for all file paths.

[poll=any-files]
help=A space delimited list of file paths. Accepts globs.
    =
    = This test passes if any file path in the list exists.
    =
    = If a custom test is specified using poll=file-test , it
    = will pass if the test returns a 0 (zero) return code
    = for any file paths.

[poll=delays]
help=A list of delays between each test re-invocation.
    =
    = If this is added, the tests will be performed a number of times with the
    = appropriate delays between them.
    =
    = The list is a comma-separated list. The syntax looks like [R*]T[U],
    = where U is a unit (s for seconds (default), m for minutes and h for
    = hours), T is the number of units. E.g.:
    =
    =# Default
    =delays=0
    =# Poll 1 minute after the runner begins, repeat every minute 10 times
    =delays=10*1m
    =
    =# Poll when runner begins,
    =# repeat every 10 seconds 6 times,
    =# repeat every minute 60 times,
    =# repeat once after 1 hour
    =delays=0,6*10s,60*1m,1h

[poll=file-test]
help=Specify a custom test to be run on each file path in either poll=any-files or
    = poll=all-files .
    =
    = When executing, any {} pattern will be replaced with the relevant file path.
    =
    = For example, if you were testing for a particular string in a file path:
    =
    = [poll]
    = all-files=file1 file2
    = file-test=test -e {} && grep -q 'hello' {}

[poll=test]
help=A shell command.
    =
    = This test passes if the command returns a 0 (zero) return code.

[ns=namelist]
description=Namelist configuration root page - see sub-pages, if any.
