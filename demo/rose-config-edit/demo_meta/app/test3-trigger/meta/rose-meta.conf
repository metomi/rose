
[env=USE_TRIGGERED_NAMELIST]
type = boolean
trigger = namelist:triggered_namelist: true

[env=TRIGGERED_IF_TRIGGERED_NAMELIST]
type = integer

[env=USE_TRIGGERED_IGNORED_NAMELIST]
type = boolean
trigger = namelist:triggered_ignored_namelist: true

[env=USE_TRIG_DUPL_NAMELIST_A]
type = boolean
trigger = namelist:trig_dupl=A: true

[env=IS_COLD]
type = boolean
trigger = env=USE_ICE: true
sort-key = ice

[env=IS_WET]
type = boolean
trigger = env=USE_ICE: true
sort-key = ice

[env=USE_ICE]
type = boolean
sort-key = ice

[namelist:triggering_list=A_trig_B]
type = logical
trigger = namelist:triggering_list=B_triglist_X_Y: .true.

[namelist:triggering_list=B_triglist_X_Y]
type = logical
trigger = namelist:triggering_list=X; namelist:triggering_list=Y

[namelist:triggering_list=X]
type = integer

[namelist:triggering_list=Y]
type = integer

[namelist:triggering_dict=A_trig_B_5_C_6]
type = integer
trigger = namelist:triggering_dict=B: 5;
          namelist:triggering_dict=C: 6

[namelist:triggering_dict=B]
type = logical

[namelist:triggering_dict=C]
type = logical

[namelist:triggering_dict=D_trig_E_1_2_F_2_3]
type = integer
trigger = namelist:triggering_dict=E: 1, 2;
          namelist:triggering_dict=F: 2, 3

[namelist:triggering_dict=E]
type = logical

[namelist:triggering_dict=F]
type = logical

[namelist:triggering_cascade=A_trig_B_4_V_3]
type = integer
trigger = namelist:triggering_cascade=B_trig_C_1: 4;
          namelist:triggering_cascade=V_trig_W: 3;

[namelist:triggering_cascade=B_trig_C_1]
type = integer
trigger = namelist:triggering_cascade=C_trig_D_E: 1

[namelist:triggering_cascade=C_trig_D_E]
type = logical
trigger = namelist:triggering_cascade=D_trig_F_3;
          namelist:triggering_cascade=E_trig_G_4

[namelist:triggering_cascade=D_trig_F_3]
type = integer
trigger = namelist:triggering_cascade=F: 3

[namelist:triggering_cascade=E_trig_G_4]
type = integer
trigger = namelist:triggering_cascade=G: 4

[namelist:triggering_cascade=F]
type = logical

[namelist:triggering_cascade=G]
type = logical

[namelist:triggering_cascade=V_trig_W]
type = logical
trigger = namelist:triggering_cascade=W_trig_Z

[namelist:triggering_cascade=W_trig_Z]
type = logical
trigger = namelist:triggering_cascade=Z

[namelist:triggering_cascade=X_trig_Z_1]
type = integer
trigger = namelist:triggering_cascade=Z: 1

[namelist:triggering_cascade=Y_trig_Z_1]
type = integer
trigger = namelist:triggering_cascade=Z: 1

[namelist:triggering_cascade=Z]
type = logical

[namelist:near_cyclic_namelist=switch]
type = logical
trigger = namelist:near_cyclic_namelist=A: .true.

[namelist:near_cyclic_namelist=A]
trigger = namelist:near_cyclic_namelist=B;
          namelist:near_cyclic_namelist=C;
          namelist:near_cyclic_namelist=D

[namelist:near_cyclic_namelist=B]
trigger = namelist:near_cyclic_namelist=C;
          namelist:near_cyclic_namelist=D

[namelist:near_cyclic_namelist=C]
trigger = namelist:near_cyclic_namelist=D

[namelist:near_cyclic_namelist=D]
trigger = namelist:near_cyclic_namelist=E; namelist:near_cyclic_namelist=F

[namelist:near_cyclic_namelist=E]
trigger = namelist:near_cyclic_namelist=F
# trigger = namelist:near_cyclic_namelist=F; namelist:near_cyclic_namelist=switch

[namelist:near_cyclic_namelist=F]

[namelist:ignored_namelist=ign_normal_var]
values = normal, abnormal
trigger = namelist:ignored_namelist=ign_trig_var: abnormal

[namelist:ignored_namelist=ign_trig_var]
type = integer

[namelist:ignored_namelist=ign_user_sw_var]
type = integer

[namelist:ignored_error_namelist=en_normal_var]
values = normal, abnormal
trigger = namelist:ignored_error_namelist=en_trig_opt_var: abnormal;
          namelist:ignored_error_namelist=en_trig_comp_var: abnormal;
          namelist:ignored_error_namelist=en_trig_i_err_comp_var: normal;
          namelist:ignored_error_namelist=en_trig_i_err_opt_var: normal;
          namelist:ignored_error_namelist=en_trig_e_err_comp_var: abnormal;
          namelist:ignored_error_namelist=en_trig_e_err_opt_var: abnormal

[namelist:ignored_error_namelist=en_trig_opt_var]
type = integer

[namelist:ignored_error_namelist=en_trig_comp_var]
type = integer
compulsory = true

[namelist:ignored_error_namelist=en_trig_i_err_opt_var]
type = integer

[namelist:ignored_error_namelist=en_trig_i_err_comp_var]
type = integer
compulsory = true

[namelist:ignored_error_namelist=en_trig_e_err_opt_var]
type = integer

[namelist:ignored_error_namelist=en_trig_e_err_comp_var]
type = integer
compulsory = true

[namelist:ignored_error_namelist=en_trig_nt_err_opt_var]
type = integer

[namelist:ignored_error_namelist=en_trig_nt_err_comp_var]
type = integer
compulsory = true

[namelist:ignored_error_namelist=en_user_sw_comp_var]
type = integer
compulsory = true

[namelist:ignored_error_namelist=en_user_sw_opt_var]
type = integer

[namelist:triggered_namelist]

[namelist:triggered_namelist=trigger_env_variable]
values = normal, abnormal
trigger = env=TRIGGERED_IF_TRIGGERED_NAMELIST

[namelist:triggered_namelist=trig_var]
type = integer

[namelist:triggered_namelist=user_sw_var]
type = integer

[namelist:triggered_ignored_namelist]

[namelist:triggered_ignored_namelist=normal_variable]
values = normal, abnormal
trigger = namelist:triggered_ignored_namelist=trig_var: abnormal

[namelist:triggered_ignored_namelist=trig_var]
type = integer

[namelist:triggered_ignored_namelist=user_sw_var]
type = integer

[namelist:trigger_logical_expression]
help = This tests the 'this % 2 == 1' type of expression

[namelist:trigger_logical_expression=trig_X_if_not_2]
type = integer
sort-key = 0
trigger = namelist:trigger_logical_expression=X: this != 2

[namelist:trigger_logical_expression=X]
type = logical

[namelist:trigger_env_var]
help = This tests triggering from variables containing environment variables

[namelist:trigger_compulsory_optional]

[namelist:trigger_compulsory_optional=comp_var]
compulsory = true
trigger = namelist:trigger_compulsory_optional=subject_var: .true.
type = logical

[namelist:trigger_compulsory_optional=opt_var]
trigger = namelist:trigger_compulsory_optional=subject_var: .true.
type = logical

[namelist:trigger_compulsory_optional=subject_var]
compulsory = true
type = integer

[namelist:trig_dupl]
duplicate = true

[namelist:trig_dupl=A]
type = integer
description = This should be triggered on/off depending on an environment variable

[namelist:trig_dupl=B]
type = logical
trigger = namelist:trig_dupl=C: .true.

[namelist:trig_dupl=C]
type = integer
description = This should be triggered on/off depending on B
